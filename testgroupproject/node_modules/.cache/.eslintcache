[{"C:\\Users\\LouLa\\OneDrive\\Documents\\GitHub\\Group46\\testgroupproject\\src\\index.js":"1","C:\\Users\\LouLa\\OneDrive\\Documents\\GitHub\\Group46\\testgroupproject\\src\\AppRouter.js":"2","C:\\Users\\LouLa\\OneDrive\\Documents\\GitHub\\Group46\\testgroupproject\\src\\reportWebVitals.js":"3","C:\\Users\\LouLa\\OneDrive\\Documents\\GitHub\\Group46\\testgroupproject\\src\\App.js":"4","C:\\Users\\LouLa\\OneDrive\\Documents\\GitHub\\Group46\\testgroupproject\\src\\Pages\\Home.js":"5","C:\\Users\\LouLa\\OneDrive\\Documents\\GitHub\\Group46\\testgroupproject\\src\\Pages\\Petitions.js":"6","C:\\Users\\LouLa\\OneDrive\\Documents\\GitHub\\Group46\\testgroupproject\\src\\Pages\\Registration.js":"7","C:\\Users\\LouLa\\OneDrive\\Documents\\GitHub\\Group46\\testgroupproject\\src\\Pages\\RenewableEnergy.js":"8","C:\\Users\\LouLa\\OneDrive\\Documents\\GitHub\\Group46\\testgroupproject\\src\\Pages\\Donation.js":"9","C:\\Users\\LouLa\\OneDrive\\Documents\\GitHub\\Group46\\testgroupproject\\src\\Pages\\Login.js":"10","C:\\Users\\LouLa\\OneDrive\\Documents\\GitHub\\Group46\\testgroupproject\\src\\Pages\\Tips.js":"11","C:\\Users\\LouLa\\OneDrive\\Documents\\GitHub\\Group46\\testgroupproject\\src\\Pages\\Quiz.js":"12","C:\\Users\\LouLa\\OneDrive\\Documents\\GitHub\\Group46\\testgroupproject\\src\\Pages\\AboutUs.js":"13","C:\\Users\\LouLa\\OneDrive\\Documents\\GitHub\\Group46\\testgroupproject\\src\\components\\Sidebar.js":"14","C:\\Users\\LouLa\\OneDrive\\Documents\\GitHub\\Group46\\testgroupproject\\src\\Pages\\QuizComponents\\Questions.js":"15","C:\\Users\\LouLa\\OneDrive\\Documents\\GitHub\\Group46\\testgroupproject\\src\\Pages\\QuizComponents\\Quizhandler.jsx":"16","C:\\Users\\LouLa\\OneDrive\\Documents\\GitHub\\Group46\\testgroupproject\\src\\Pages\\QuizComponents\\QuestionHandler.jsx":"17","C:\\Users\\LouLa\\OneDrive\\Documents\\GitHub\\Group46\\testgroupproject\\src\\components\\Footer.js":"18","C:\\Users\\LouLa\\OneDrive\\Documents\\GitHub\\Group46\\testgroupproject\\src\\Pages\\TipsComponents\\Likes.js":"19","C:\\Users\\LouLa\\OneDrive\\Documents\\GitHub\\Group46\\testgroupproject\\src\\Pages\\TipsComponents\\AllTip.js":"20","C:\\Users\\LouLa\\OneDrive\\Documents\\GitHub\\Group46\\testgroupproject\\src\\components\\Header.js":"21","C:\\Users\\LouLa\\OneDrive\\Documents\\GitHub\\Group46\\testgroupproject\\src\\Pages\\QuizComponents\\LeaderBoard.js":"22","C:\\Users\\LouLa\\OneDrive\\Documents\\GitHub\\Group46\\testgroupproject\\src\\Pages\\PetitionSignForm.js":"23","C:\\Users\\LouLa\\OneDrive\\Documents\\GitHub\\Group46\\testgroupproject\\src\\Pages\\PetitionComponents\\PetitionList.js":"24","C:\\Users\\LouLa\\OneDrive\\Documents\\GitHub\\Group46\\testgroupproject\\src\\Pages\\PetitionComponents\\Petition_content.js":"25","C:\\Users\\LouLa\\OneDrive\\Documents\\GitHub\\Group46\\testgroupproject\\src\\Pages\\PetitionComponents\\NotFoundPage.js":"26"},{"size":642,"mtime":1675861430488,"results":"27","hashOfConfig":"28"},{"size":1743,"mtime":1680114267618,"results":"29","hashOfConfig":"28"},{"size":375,"mtime":1675861430489,"results":"30","hashOfConfig":"28"},{"size":2976,"mtime":1680114267618,"results":"31","hashOfConfig":"28"},{"size":7766,"mtime":1678978410672,"results":"32","hashOfConfig":"28"},{"size":799,"mtime":1680030762817,"results":"33","hashOfConfig":"28"},{"size":5012,"mtime":1680114267617,"results":"34","hashOfConfig":"28"},{"size":21646,"mtime":1680029890121,"results":"35","hashOfConfig":"28"},{"size":4809,"mtime":1680030086201,"results":"36","hashOfConfig":"28"},{"size":3325,"mtime":1680114267618,"results":"37","hashOfConfig":"28"},{"size":38020,"mtime":1680201563420,"results":"38","hashOfConfig":"28"},{"size":5839,"mtime":1679911660119,"results":"39","hashOfConfig":"28"},{"size":1948,"mtime":1680201633513,"results":"40","hashOfConfig":"28"},{"size":1760,"mtime":1679586743180,"results":"41","hashOfConfig":"28"},{"size":2485,"mtime":1679489617628,"results":"42","hashOfConfig":"28"},{"size":4270,"mtime":1679911660121,"results":"43","hashOfConfig":"28"},{"size":1292,"mtime":1678978379302,"results":"44","hashOfConfig":"28"},{"size":2560,"mtime":1679589501061,"results":"45","hashOfConfig":"28"},{"size":1511,"mtime":1680119441488,"results":"46","hashOfConfig":"28"},{"size":11987,"mtime":1680119161821,"results":"47","hashOfConfig":"28"},{"size":4293,"mtime":1679489593634,"results":"48","hashOfConfig":"28"},{"size":686,"mtime":1679911660120,"results":"49","hashOfConfig":"28"},{"size":5824,"mtime":1680031263643,"results":"50","hashOfConfig":"28"},{"size":1403,"mtime":1680031127562,"results":"51","hashOfConfig":"28"},{"size":2179,"mtime":1680000059435,"results":"52","hashOfConfig":"28"},{"size":96,"mtime":1680000059431,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"58"},"1qvfo45",{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"58"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":30,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"58"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"58"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"58"},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"58"},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"58"},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"58"},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\LouLa\\OneDrive\\Documents\\GitHub\\Group46\\testgroupproject\\src\\index.js",["141"],[],"\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport AppRouter from './AppRouter';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    {/* <App /> needed to be app router*/}\r\n    <AppRouter />\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n",[],"C:\\Users\\LouLa\\OneDrive\\Documents\\GitHub\\Group46\\testgroupproject\\src\\AppRouter.js",[],[],"C:\\Users\\LouLa\\OneDrive\\Documents\\GitHub\\Group46\\testgroupproject\\src\\reportWebVitals.js",[],[],"C:\\Users\\LouLa\\OneDrive\\Documents\\GitHub\\Group46\\testgroupproject\\src\\App.js",["142"],[],"C:\\Users\\LouLa\\OneDrive\\Documents\\GitHub\\Group46\\testgroupproject\\src\\Pages\\Home.js",["143"],[],"import React, {useContext} from \"react\";\r\nimport { Link, useNavigate, useOutletContext } from \"react-router-dom\";\r\n\r\nimport \"./Home.css\";\r\n\r\nimport UserContext from '../App.js';\r\n\r\n\r\nimport Header from '../components/Header.js';\r\n\r\nexport default function Home() {\r\n\r\n  const user = useContext(UserContext);\r\n    console.log(\"user= \", user);\r\n\r\n  // \r\n  const [loggedInUser, setLoggedinUser] = useOutletContext();\r\n  console.log(\"home liu=\", loggedInUser);\r\n    \r\n  const nav = useNavigate();\r\n\r\n  const logout = () => {\r\n    sessionStorage.removeItem(\"jwt\");\r\n    setLoggedinUser(\"\");\r\n    nav(\"/login\");\r\n    // nav(\"/\");        need to refresh home page -> need to put logout in header\r\n  }\r\n\r\n\r\n  if (loggedInUser === \"\")\r\n  {\r\n    return (\r\n      // <div><p>This is home.</p><header>anything</header></div>\r\n  \r\n      // <section>\r\n        /* <Header props={[loggedInUser, setLoggedinUser]}/> */\r\n      <>\r\n\r\n        \r\n\r\n      <section className=\"mainContent\">\r\n  \r\n        {/*  */}\r\n        {/* <p>\r\n        {/* <button className=\"AO-link\" onClick={logout}>Log Out</button> *}\r\n          <Link className=\"AO-link\" to={'/register'}>Sign Up</Link>\r\n          <p className=\"AO-or\">or</p>\r\n          <Link className=\"AO-link\" to={'/login'}>Login</Link>\r\n        </p> */}\r\n        {/* <br/><br/><br/>\r\n         */}\r\n        {/*  */}\r\n  \r\n        <div className=\"intro\">\r\n          <div className=\"introPara\">\r\n            <p>\r\n              Spending too much on your energy bill? Or do you simply want to switch\r\n              to a better more sustainable source of energy?\r\n            </p>\r\n            <p>\r\n              We provide quotes comparing different energies to help you find what's\r\n              best for you.\r\n            </p>\r\n            <p>\r\n              Just enter a few details in the calculator below and we can start you\r\n              off switching energy sources.\r\n            </p>\r\n          </div>\r\n        \r\n\r\n          <div className=\"reg\">\r\n          {/* <button className=\"AO-link\" onClick={logout}>Log Out</button> */}\r\n            <Link className=\"AO-link\" to={'/register'}>Sign Up</Link>\r\n            <p className=\"AO-or\">or</p>\r\n            <Link className=\"AO-link\" to={'/login'}>Login</Link>\r\n          </div>\r\n        </div>\r\n\r\n        <br />\r\n        <br />\r\n  \r\n        <div className=\"calculator\">\r\n          <h3>Energy Quote Calculator</h3>\r\n          <br />\r\n          <p>calculator stuff here</p>\r\n          <br />\r\n        </div>\r\n        <br />\r\n  \r\n        <div className=\"myQuotes\">\r\n          <h4>Your Quotes:</h4>\r\n          <br />\r\n          <p>You have 1 quote saved.</p>\r\n          <br />\r\n  \r\n          <div className=\"quotesList\">\r\n            <div className=\"quote\">\r\n              <p>1st quote</p>\r\n            </div>\r\n            <br />\r\n          </div>\r\n        </div>\r\n        <br />\r\n        <br />\r\n  \r\n        <br />\r\n        <ul className=\"homeList\">\r\n          <li>\r\n            <p>Not sure about making the change to renewable energy just yet?</p>\r\n            <p>\r\n              Find out about each renewable energy{\" \"}\r\n              <a href=\"/renewable_energy\">here</a>.\r\n            </p>\r\n          </li>\r\n          <br />\r\n          <li>\r\n            <p>Want to reduce your energy bills in the meantime?</p>\r\n            <p>\r\n              Look through our energy saving tips as well as user-posted tips{\" \"}\r\n              <a href=\"/tips\">here</a>.\r\n            </p>\r\n          </li>\r\n          <br />\r\n          <li>\r\n            <p>Want to get involved?</p>\r\n            <p>\r\n              Sign up to petitions promoting for change{\" \"}\r\n              <a href=\"/petitions\">here</a>.\r\n            </p>\r\n          </li>\r\n          <br />\r\n          <li>\r\n            <p>How much do you know about our energy?</p>\r\n            <p>\r\n              Test your knowledge <a href=\"/quiz\">here</a> by taking interactive\r\n              quizzes.\r\n            </p>\r\n          </li>\r\n          <br />\r\n        </ul>\r\n      </section>\r\n\r\n      {/* <p className=\"reg\">\r\n      {/* <button className=\"AO-link\" onClick={logout}>Log Out</button> *}\r\n        <Link className=\"AO-link\" to={'/register'}>Sign Up</Link>\r\n        <p className=\"AO-or\">or</p>\r\n        <Link className=\"AO-link\" to={'/login'}>Login</Link>\r\n      </p> */}\r\n\r\n\r\n      </>\r\n  \r\n      // {/* </section> */}\r\n    );\r\n  }\r\n  else \r\n  {\r\n  return (\r\n    // <div><p>This is home.</p><header>anything</header></div>\r\n\r\n    // <section>\r\n      /* <Header props={[loggedInUser, setLoggedinUser]}/> */\r\n\r\n    <section className=\"mainContent\">\r\n\r\n      {/*  */}\r\n      {/* <p>\r\n      <button className=\"AO-link\" onClick={logout}>Log Out</button>\r\n      </p>\r\n      <br/><br/><br/> */}\r\n      {/*  */}\r\n\r\n      {/* <p>\r\n        Spending too much on your energy bill? Or do you simply want to switch\r\n        to a better more sustainable source of energy?\r\n      </p>\r\n      <p>\r\n        We provide quotes comparing different energies to help you find what's\r\n        best for you.\r\n      </p>\r\n      <p>\r\n        Just enter a few details in the calculator below and we can start you\r\n        off switching energy sources.\r\n      </p> */}\r\n\r\n      <div className=\"intro\">\r\n        <div className=\"introPara\">\r\n          <p>\r\n            Spending too much on your energy bill? Or do you simply want to switch\r\n            to a better more sustainable source of energy?\r\n          </p>\r\n          <p>\r\n            We provide quotes comparing different energies to help you find what's\r\n            best for you.\r\n          </p>\r\n          <p>\r\n            Just enter a few details in the calculator below and we can start you\r\n            off switching energy sources.\r\n          </p>\r\n        </div>\r\n      \r\n        {/* <div className=\"reg\"> */}\r\n          <div className=\"reg\">\r\n          <button className=\"AO-link\" onClick={logout}>Log Out</button>\r\n            {/* <Link className=\"AO-link\" to={'/register'}>Sign Up</Link>\r\n            <p className=\"AO-or\">or</p>\r\n            <Link className=\"AO-link\" to={'/login'}>Login</Link> */}\r\n          </div>\r\n        {/* </div> */}\r\n      </div>\r\n\r\n\r\n      <br />\r\n      <br />\r\n\r\n      <div className=\"calculator\">\r\n        <h3>Energy Quote Calculator</h3>\r\n        <br />\r\n        <p>calculator stuff here</p>\r\n        <br />\r\n      </div>\r\n      <br />\r\n\r\n      <div className=\"myQuotes\">\r\n        <h4>Your Quotes:</h4>\r\n        <br />\r\n        <p>You have 1 quote saved.</p>\r\n        <br />\r\n\r\n        <div className=\"quotesList\">\r\n          <div className=\"quote\">\r\n            <p>1st quote</p>\r\n          </div>\r\n          <br />\r\n        </div>\r\n      </div>\r\n      <br />\r\n      <br />\r\n\r\n      <br />\r\n      <ul className=\"homeList\">\r\n        <li>\r\n          <p>Not sure about making the change to renewable energy just yet?</p>\r\n          <p>\r\n            Find out about each renewable energy{\" \"}\r\n            <a href=\"/renewable_energy\">here</a>.\r\n          </p>\r\n        </li>\r\n        <br />\r\n        <li>\r\n          <p>Want to reduce your energy bills in the meantime?</p>\r\n          <p>\r\n            Look through our energy ssving tips as well as user-posted tips{\" \"}\r\n            <a href=\"/tips\">here</a>.\r\n          </p>\r\n        </li>\r\n        <br />\r\n        <li>\r\n          <p>Want to get involved?</p>\r\n          <p>\r\n            Sign up to petitions promoting for change{\" \"}\r\n            <a href=\"/petitions\">here</a>.\r\n          </p>\r\n        </li>\r\n        <br />\r\n        <li>\r\n          <p>How much do you know about our energy?</p>\r\n          <p>\r\n            Test your knowledge <a href=\"/quiz\">here</a> by taking interacctive\r\n            quizzes.\r\n          </p>\r\n        </li>\r\n        <br />\r\n      </ul>\r\n    </section>\r\n\r\n    // {/* </section> */}\r\n  );\r\n  }\r\n}\r\n","C:\\Users\\LouLa\\OneDrive\\Documents\\GitHub\\Group46\\testgroupproject\\src\\Pages\\Petitions.js",[],[],"C:\\Users\\LouLa\\OneDrive\\Documents\\GitHub\\Group46\\testgroupproject\\src\\Pages\\Registration.js",[],[],"C:\\Users\\LouLa\\OneDrive\\Documents\\GitHub\\Group46\\testgroupproject\\src\\Pages\\RenewableEnergy.js",["144","145"],[],"C:\\Users\\LouLa\\OneDrive\\Documents\\GitHub\\Group46\\testgroupproject\\src\\Pages\\Donation.js",["146","147","148","149"],[],"C:\\Users\\LouLa\\OneDrive\\Documents\\GitHub\\Group46\\testgroupproject\\src\\Pages\\Login.js",["150"],[],"C:\\Users\\LouLa\\OneDrive\\Documents\\GitHub\\Group46\\testgroupproject\\src\\Pages\\Tips.js",["151","152","153","154","155","156","157","158","159","160","161","162","163","164","165","166","167","168","169","170","171","172","173","174","175","176","177","178","179","180"],[],"import React, { useRef, useState, useEffect, createElement } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport { useOutletContext } from \"react-router-dom\";\r\n\r\nimport './Tips.css';\r\n\r\nimport lightbulb from \"./TipsComponents/lightbulb.jpg\";\r\nimport shower from \"./TipsComponents/shower.jpg\";\r\nimport kettle from \"./TipsComponents/kettle.jpg\";\r\nimport pencil from \"./TipsComponents/pencil.jpg\";\r\nimport bin from \"./TipsComponents/delete bin.jpg\";\r\n\r\nimport AllTip from './TipsComponents/AllTip';\r\nimport Likes from './TipsComponents/Likes';\r\n\r\n// import badLang from './TipsComponents/badLang.json';         // imported later on\r\n\r\nexport default function Tips(){\r\n\r\n    const [loggedInUser, setLoggedinUser] = useOutletContext();             // for logged in user\r\n    const [userdata, setUserdata] = useState(\"\");                       // logged in user\r\n\r\n    const [allTipData, setAllTipData] = useState(\"\");                   // all tips\r\n\r\n    const [data, setData] = useState(\"\");                               // logged in user's tips\r\n\r\n    const catSort = useRef(\"\");\r\n    const [cSort, setCSort] = useState(\"\");\r\n\r\n    const checkLoggedIn = () => {                                       // check if a user is logged in\r\n        if(loggedInUser!==\"\" && userdata===\"\")\r\n        {\r\n            const jwt = sessionStorage.getItem('jwt');\r\n            console.log(jwt);\r\n            axios({                                                     // gets user by email from backend\r\n                method: 'get',\r\n                url: 'http://localhost:8080/user/findByEmail',\r\n                params: {email: loggedInUser},\r\n                headers: {\"Authorization\" : `Bearer ${jwt}`}\r\n            }).then((response) => {\r\n                if (response.status === 200){\r\n                    console.log(response.data);\r\n                    setUserdata(response.data);                         // sets the logged in user\r\n                    \r\n                    // getAllData();\r\n                }\r\n            }).catch(err => {\r\n                console.log(err.response);\r\n                setUserdata(\"Data failure\");\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    var tipCategory = useRef();\r\n    var tipString = useRef();\r\n    // const tipCategory2 = useRef(\"ahhhhh\");\r\n    // const tipString2 = useRef();\r\n\r\n    // var [tipC, setTipC] = useState(); //moved to top\r\n    var ro = true;                                              // boolean readonly\r\n\r\n    const author = useRef();\r\n    // remove author op\r\n\r\n    // const badWords = JSON.parse(badLang);\r\n    const badWords = require('./TipsComponents/badLang.json').words;\r\n\r\n    const checkWords = (string) => {                                        // check if tipString contains banned language\r\n        console.log(\"in checkWords \", string);\r\n        const checker = value => !badWords.some(e => value.includes(e));\r\n\r\n        const arr  = string.split(\" \");\r\n        var containsBad = false;\r\n\r\n        if (arr.filter(checker).length !== arr.length)\r\n            containsBad = true;\r\n\r\n        return containsBad;\r\n    }\r\n\r\n    const validateForm = () => {                                        // validates create tip form\r\n        let formValid = false;\r\n\r\n        if (tipCategory.current.validity.valueMissing \r\n            || tipString.current.validity.valueMissing\r\n            )\r\n        {\r\n            alert(\"Please fill in all text fields.\");\r\n        }\r\n        else if (checkWords(tipString.current.value))\r\n        {\r\n            alert(\"This tip contains banned language. \\nPlease enter again.\");\r\n        }\r\n        else\r\n        {\r\n            formValid = true;\r\n        }\r\n        return formValid;\r\n    }\r\n\r\n    const validateForm2 = (tipID) => {                                  // validates the edit tip form\r\n        let formValid = false;\r\n\r\n        const newtC = document.getElementById(tipID + \"select\");\r\n        //   var tC = document.getElementById(tipID + \"tC\");\r\n        var tS = document.getElementById(tipID);\r\n\r\n        if (newtC.value === \"\" || tS.value === \"\"){\r\n            alert(\"Please fill in all text fields.\");\r\n        }\r\n        else if (checkWords(tS.value))\r\n        {\r\n            alert(\"This tip contains banned language. \\nPlease enter again.\");\r\n        }\r\n        else\r\n        {\r\n            formValid = true;\r\n        }\r\n        return formValid;\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        if(validateForm()){                                         // if create tip form is valid post tip to backend\r\n\r\n            const jwt = sessionStorage.getItem('jwt');\r\n            console.log(jwt);\r\n\r\n            axios({\r\n                method: 'post',\r\n                url: 'http://localhost:8080/tip',\r\n                data: {\r\n                    tipCategory: tipCategory.current.value,\r\n                    tipString: tipString.current.value,\r\n                    author: {\r\n                        id: userdata.id,\r\n                        name: userdata.name,\r\n                        email: userdata.email,\r\n                        password: userdata.password,\r\n                        dob: userdata.dob\r\n                    }\r\n                },\r\n                headers: { \"Authorization\" : `Bearer ${jwt}`}       // only logged in users can create tips\r\n            }).then(response=>{\r\n                console.log(response);\r\n                if (response.status === 201){\r\n                    alert(\"Tip created.\")\r\n\r\n                    ////////\r\n                    getAllData();                                   // gets all logged in user's tips\r\n                }\r\n            }).then(()=>{\r\n                tipCategory.current.value=\"\";\r\n                tipString.current.value=\"\";\r\n            })\r\n            .catch(error=>{\r\n                console.log(error);\r\n            })\r\n        }\r\n    }\r\n\r\n    ///////////////\r\n\r\n    const getAllTipData = () => {                                   // gets all tips from backend\r\n        // const jwt = sessionStorage.getItem('jwt');\r\n\r\n        axios({\r\n            method: 'get',\r\n            url: 'http://localhost:8080/tip',\r\n            // headers: {\"Authorization\" : `Bearer ${jwt}`}\r\n            })\r\n            .then((response) => {\r\n                setAllTipData(response.data);\r\n\r\n                //////////////\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n    };\r\n\r\n    function custom_sort(a, b) {                                    // newest first tip sort\r\n        return new Date(b.createdAt) - new Date(a.createdAt);\r\n    }\r\n    function custom_sort_old(a, b) {\r\n        return new Date(a.createdAt)/*.getTime()*/ - new Date(b.createdAt)/*.getTime()*/;\r\n      }\r\n\r\n    function mp_sort(a, b)\r\n    {\r\n      console.log(\"in most popular sort a= \", a, \" b= \", b);\r\n\r\n      var opEla = document.getElementById(a.id + \"option\");\r\n      console.log(\"opEla= \", opEla);\r\n      console.log(\"opEla id= \", opEla.id, \" val= \", opEla.value, \" textC= \", opEla.textContent);\r\n\r\n      var opElb = document.getElementById(b.id + \"option\");\r\n      console.log(\"opElb= \", opElb);\r\n      console.log(\"opElb id= \", opElb.id, \" val= \", opElb.value);\r\n\r\n      console.log(\"after\");\r\n\r\n      if(opEla.value === \"\" || opElb.value === \"\")\r\n      {\r\n        console.log(\"value blank\");\r\n      }\r\n      else\r\n      {\r\n        console.log(\"not blank)\");\r\n      }\r\n\r\n      return opElb.value - opEla.value;\r\n    }\r\n\r\n    function testsort(a, b)                                         // sorts most first\r\n    {\r\n      return b - a;\r\n    }\r\n\r\n    function testsortleast(a, b)\r\n    {\r\n      return a - b;\r\n    }\r\n\r\n    function isZero(i) {\r\n      return i === \"0\";\r\n    }\r\n\r\n    const displayAllTipData = () => {                               // displays all tips\r\n        // getAllTipData();\r\n\r\n        var mappingAllTipData = allTipData;                         // set all tips to local variable for mapping\r\n\r\n        if (orderSort.current.value === \"Newest First\" && allTipData !== \"\")\r\n        {\r\n            allTipData.sort(custom_sort);\r\n        }\r\n        else if (orderSort.current.value === \"Most Popular\" && allTipData !== \"\")\r\n        {\r\n            console.log(\"in most popular\");\r\n\r\n            let goodarray = [];\r\n\r\n            let keys = [];\r\n            let array = [];\r\n\r\n            var obj = {};\r\n            var a = [];\r\n\r\n            allTipData.map((aTD, index) => {                        // adds likes numbers to array\r\n\r\n                var opEla = document.getElementById(aTD.id + \"option\");\r\n                // array = [...array, opEla.value];\r\n                array.push(opEla.value);\r\n                keys.push(index);\r\n            })\r\n\r\n            if (array.every(isZero))\r\n            {\r\n              console.log(\"bad array, \", array);\r\n            }\r\n            else\r\n            {\r\n              console.log(\"good array\");\r\n              goodarray = array;\r\n              console.log(\"good array= \", goodarray, \"key array= \", keys);\r\n            }\r\n\r\n            for (var  i = 0; i < keys.length; i++)\r\n            {\r\n              obj[keys[i]] = array[i];\r\n            }\r\n\r\n            for (var key in obj)\r\n            {\r\n              if (obj.hasOwnProperty(key))\r\n              {\r\n                a.push(obj[key]);\r\n              }\r\n            }\r\n\r\n            var start = a[0];                                           // gets start and end of array\r\n            var end = a[a.length - 1];\r\n\r\n            let index = [];                                             // array of tip indexes\r\n            let sorted = [];                                            // the sorted like array\r\n\r\n            for (var i = start; i >= end; i--)                          // loops through array and sorts it ordering from start to end\r\n            {\r\n              for (var j = 0; j < array.length; j++)\r\n              {\r\n                if (array[j] == i)\r\n                {\r\n                  sorted.push(array[j]);\r\n                  index.push(j);\r\n                }\r\n              }\r\n            }\r\n\r\n            let newATD = [];\r\n\r\n            for (var i = 0; i < index.length; i++)\r\n            {\r\n                allTipData.map((aTD, ix) => {\r\n                    if (ix == index[i])\r\n                    {\r\n                        newATD.push(aTD);\r\n                    }\r\n                })\r\n            }\r\n\r\n            for (var i = 0; i < mappingAllTipData.length; i++)              // sets mapping all tips to sorted all tips\r\n            {\r\n                mappingAllTipData[i] = newATD[i];\r\n            }\r\n\r\n            goodarray.sort(testsort);\r\n        }\r\n        else if (orderSort.current.value === \"Least Popular\" && allTipData !== \"\")\r\n        {\r\n            console.log(\"in least popular\");\r\n\r\n            let goodarray = [];\r\n\r\n            let keys = [];\r\n            let array = [];\r\n\r\n            var obj = {};\r\n            var a = [];\r\n\r\n            allTipData.map((aTD, index) => {\r\n                var opEla = document.getElementById(aTD.id + \"option\");\r\n                // array = [...array, opEla.value];\r\n                array.push(opEla.value);\r\n                keys.push(index);\r\n            })\r\n\r\n            if (array.every(isZero))\r\n            {\r\n              console.log(\"bad array, \", array);\r\n            }\r\n            else\r\n            {\r\n              console.log(\"good array\");\r\n              goodarray = array;\r\n              console.log(\"good array= \", goodarray, \"key array= \", keys);\r\n            }\r\n\r\n            for (var  i = 0; i < keys.length; i++)\r\n            {\r\n              obj[keys[i]] = array[i];\r\n            }\r\n\r\n            for (var key in obj)\r\n            {\r\n              if (obj.hasOwnProperty(key))\r\n              {\r\n                a.push(obj[key]);\r\n              }\r\n            }\r\n\r\n            var start = a[0];\r\n            var end = a[a.length - 1];\r\n\r\n            let index = [];\r\n            let sorted = [];\r\n\r\n            for (var i = start; i >= end; i--)\r\n            {\r\n              for (var j = 0; j < array.length; j++)\r\n              {\r\n                if (array[j] == i)\r\n                {\r\n                  sorted.push(array[j]);\r\n                  index.push(j);\r\n                }\r\n              }\r\n            }\r\n\r\n            let newATD = [];\r\n\r\n            for (var i = 0; i < index.length; i++)\r\n            {\r\n                allTipData.map((aTD, ix) => {\r\n                    if (ix == index[i])\r\n                    {\r\n                        newATD.push(aTD);\r\n                    }\r\n                })\r\n            }\r\n\r\n            for (var i = 0; i < newATD.length; i++)\r\n            {\r\n                mappingAllTipData[i] = newATD[newATD.length - 1 - i];\r\n            }\r\n\r\n            goodarray.sort(testsort);\r\n        }\r\n        else                                        // will be original which is Oldest First\r\n        {\r\n            // allTipData.sort(custom_sort_old);\r\n        }\r\n\r\n        return allTipData ? (\r\n            mappingAllTipData.map((allTipData, index) => {\r\n            \r\n            if(catSort.current.value !== \"\" && allTipData !== \"\")                       // if a category is selected\r\n            {\r\n                if (allTipData.tipCategory !== catSort.current.value)                   // if category is not selected category return hidden tip\r\n                {\r\n                    return (\r\n                        <div className=\"hidden\" width=\"0\" height=\"0\">\r\n                            <AllTip loggedInUser={loggedInUser} allTipData={allTipData} />{/*order={order}/>         {/* returns like number and correct like/unlike button */}\r\n                        </div>\r\n                    );\r\n                }\r\n            }\r\n\r\n            return (                                                             // returns tip\r\n                <div className=\"tipBox\">\r\n                    <span className=\"box\" key={allTipData.id}>\r\n                        <div className=\"firstLine\">\r\n                            <span className=\"tipCategory\"><p>{allTipData.tipCategory}</p></span>\r\n\r\n                            <span className=\"postInfo\">\r\n                                <span className=\"tipAuthor\">posted by: {allTipData.author.name}</span>\r\n                                <span className=\"tipDateTime\">\r\n                                    {new Date(allTipData.createdAt).toLocaleDateString('en-gb', { year:\"numeric\", month:\"numeric\", day:\"numeric\", hour:\"2-digit\", minute:\"2-digit\"}) }\r\n                                </span>\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"secondLine\">\r\n                            <textarea className=\"userTipStringAll\" readOnly>{allTipData.tipString}</textarea>\r\n                            <span className=\"likes\"><br/>\r\n                                <span className=\"likeTip\">\r\n                                    <AllTip loggedInUser={loggedInUser} allTipData={allTipData} />{/*order={order}/>         {/* returns like number and correct like/unlike button */}\r\n                                </span>\r\n                            </span>\r\n                        </div>\r\n                    </span>\r\n                </div>\r\n            );\r\n        })\r\n        ) : (                           // if no tips\r\n            <div><br/>\r\n                <h3>No data yet</h3>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    ///////////////\r\n    const getAllData = () => {                                              // get all logged in user's tips\r\n        const jwt = sessionStorage.getItem('jwt');\r\n\r\n        axios({\r\n            method: 'get',\r\n            url: 'http://localhost:8080/tip/findByAuthor',\r\n            params: {authorID: userdata.id},\r\n            headers: {\"Authorization\" : `Bearer ${jwt}`}})                  // must be logged in\r\n            .then((response) => {\r\n                setData(response.data);\r\n\r\n                //////////\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n        };\r\n\r\n    const orderSort = useRef(\"Newest First\");// had to put before useeffect         // default order is newest first\r\n    useEffect(() => {\r\n        checkLoggedIn();                    // check if user is logged in\r\n        getAllData();                       // get logged in user's data\r\n\r\n        ///////\r\n        getAllTipData();                    // gets all tips\r\n\r\n    }, [userdata, catSort]);\r\n\r\n    const displayData = () => {                                                     // displays all logged in user's tips\r\n        return data ? (\r\n        data.map((data) => {\r\n            // getLikes(data);//                                                       // gets tip's likes number\r\n            var tC = data.id + \"tC\";                                                // category\r\n            var tE = data.id + \"tE\";                                                // edit\r\n            var tD = data.id + \"tD\";                                                // delete\r\n            var tM = data.id + \"tM\";                                                // modify\r\n            return (                                                // returns user's tip\r\n                <div className=\"userTipBoxN\">\r\n                    <span className=\"userTipInfoN\" key={data.id}>\r\n                        <div className=\"firstLine\">\r\n                            <span className=\"tipCategory\" id={tC}>{data.tipCategory}</span>\r\n                            <span className=\"postInfo\">\r\n                                <span className=\"tipDateTime\">\r\n                                    {\" \"}posted - {new Date(data.createdAt).toLocaleDateString('en-gb', { year:\"numeric\", month:\"numeric\", day:\"numeric\", hour:\"2-digit\", minute:\"2-digit\"}) }\r\n                                    {\" \"}updated - {new Date(data.updatedAt).toLocaleDateString('en-gb', { year:\"numeric\", month:\"numeric\", day:\"numeric\", hour:\"2-digit\", minute:\"2-digit\"}) }\r\n                                </span>\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"secondLine\">\r\n                            <textarea className=\"userTipString\" id={data.id} readOnly={ro}>{data.tipString}</textarea>\r\n                            <span className=\"userLikes\">\r\n                                <span className=\"userTipLikes\">\r\n                                    <Likes tip={data}/>                                 {/* gets tip's number of likes */}\r\n                                </span>\r\n                            </span>\r\n                            <div className=\"endSecondLine\">\r\n                                <div className=\"modifyTip\" id={tM}> \r\n                                    <button className=\"editBtn\" onClick={() => editTip(data.id)}>\r\n                                        <img src={pencil} alt=\"editingButton\" id={tE} width=\"25px\" height=\"35px\" /> \r\n                                        <span className=\"tooltiptext\">Edit</span>\r\n                                    </button>              \r\n                                    <button className=\"editBtn\" onClick={() => deleteTip(data.id)}>\r\n                                        <img src={bin} alt=\"deletingButton\" id={tD} width=\"25px\" height=\"35px\" />\r\n                                        <span className=\"tooltiptext\">Delete</span>\r\n                                    </button>\r\n                              </div>\r\n                            </div>\r\n                        </div>\r\n                    </span>\r\n                \r\n                    <br /><p></p>\r\n\r\n                </div>\r\n            );\r\n        })\r\n        ) : (                                   // if user id not logged in\r\n            <div>\r\n                <br/>\r\n                <h4>Want to post helpful tips for others? Create an account to submit your tips.</h4>\r\n                <h4>If you already have an account Login to see your tips.</h4>\r\n            </div>\r\n\r\n        );\r\n    }\r\n\r\n    // function getLikes(tip)                                                          // gets the tip's likes from backend\r\n    // {\r\n    //     const jwt = sessionStorage.getItem('jwt');\r\n    //     console.log(jwt, tip.id);\r\n\r\n    //     axios({\r\n    //         method: 'get',\r\n    //         url: 'http://localhost:8080/like/countByTipId',\r\n    //         params: {tipId : tip.id},\r\n    //         headers: { \"Authorization\" : `Bearer ${jwt}`}\r\n    //     }).then(response=>{\r\n    //         setLikeno(response.data.length);\r\n    //     })\r\n    //     .catch(error=>{\r\n    //         console.log(error);\r\n    //     })\r\n    // }\r\n\r\n    function editTip(tipID) {                                   // editing a tip\r\n        const el = document.getElementById(tipID);                                          // gets tip string's element \r\n        ro = false;\r\n        el.readOnly = false;// this works                                                   // allows tip's textarea to be editable\r\n\r\n        const tC = document.getElementById(tipID + \"tC\");                                   // gets tip category's element\r\n\r\n        var d = document.createElement('select');                                           // creates category select box\r\n        d.className = 'tipFilterCategory';\r\n        d.id = tipID + \"select\";\r\n        d.innerHTML = tC.innerHTML;\r\n\r\n        tC.parentNode.replaceChild(d, tC);                                                  // replaces tip's category with select box\r\n\r\n        let opts = [\"\", \"Home\", \"Car\", \"Transport\"];\r\n        for (var i = 0; i < opts.length; i++) {\r\n            var option = document.createElement(\"option\");\r\n            option.value = opts[i];\r\n            option.text = opts[i];\r\n            d.appendChild(option);\r\n        }\r\n        //\r\n        // const tE = document.getElementById(tipID + \"tE\");\r\n        // const tD = document.getElementById(tipID + \"tD\");\r\n        const tM = document.getElementById(tipID + \"tM\");                                   // gets tip's modify element\r\n\r\n        var e = document.createElement('button');                                           // creates submit edit button\r\n        e.textContent = \"Submit\";\r\n        e.text = \"Submit\";\r\n        e.className = \"tipButton\";\r\n        e.id = tipID + \"subBtn\";\r\n        e.onclick = () => eTip(tipID);                  // submit's edited tip\r\n\r\n        tM.parentNode.replaceChild(e, tM);                                                  // replaces tip's modify element with submit edit button\r\n    }\r\n\r\n    function eTip(tipID)                                // handles edited tips\r\n    {\r\n      const tC = document.getElementById(tipID + \"select\");\r\n      const tS = document.getElementById(tipID);\r\n\r\n      if(validateForm2(tipID)){                                                             // if edited tip is valid put it to backend\r\n\r\n            const jwt = sessionStorage.getItem('jwt');\r\n            console.log(jwt);\r\n\r\n            axios({\r\n                method: 'put',\r\n                url: 'http://localhost:8080/tip/' + tipID,\r\n                data: {\r\n                    tipCategory: tC.value,\r\n                    tipString: tS.value,\r\n                    author: {\r\n                        id: userdata.id,\r\n                        name: userdata.name,\r\n                        email: userdata.email,\r\n                        password: userdata.password,\r\n                        dob: userdata.dob\r\n                    }\r\n                },\r\n                headers: { \"Authorization\" : `Bearer ${jwt}`,\r\n                \"Access-Control-Allow-Origin\": \"http://localhost:8080\"}\r\n            }).then(response=>{\r\n                console.log(response);\r\n                if (response.status === 200){\r\n                    alert(\"Tip updated.\")\r\n                    getAllData();//                                              // get all logged in user's tips\r\n                    const spantC = document.createElement(\"span\");                  // replaces select category with tip's category\r\n                    spantC.id = tipID + \"tC\";\r\n                    spantC.className = \"tipCategory\";\r\n                    spantC.innerHTML = tC.value;\r\n                    tC.parentNode.replaceChild(spantC, tC);\r\n\r\n                    // tip String\r\n                    tS.readOnly = true;                                             // makes tip's string uneditable\r\n\r\n                    // modify tip\r\n                    const oldtM = document.getElementById(tipID + \"tM\");            // puts modify tip back instead of submit button\r\n                    console.log(\"oldtM= \", oldtM);\r\n                    const tM = document.createElement(\"div\");\r\n                    tM.id = tipID + \"tM\";\r\n\r\n                    // edit\r\n                    const eB = document.createElement(\"button\");\r\n                    eB.className = \"editBtn\";\r\n                    eB.onclick = () => editTip(tipID);\r\n                    const eBimg = document.createElement(\"img\");\r\n                    eBimg.id = tipID + \"tE\";\r\n                    eBimg.alt=\"editingButton\";\r\n                    eBimg.src= pencil;\r\n                    eBimg.style.width=\"25px\";\r\n                    eBimg.style.height=\"35px\";\r\n                    const eBimgttt = document.createElement(\"span\");\r\n                    eBimgttt.className = \"tooltiptext\";\r\n                    eBimgttt.innerHTML = \"Edit\";\r\n\r\n                    eBimg.appendChild(eBimgttt);\r\n                    eB.appendChild(eBimg);\r\n\r\n                    tM.appendChild(eB);\r\n\r\n                    // delete\r\n                    const dB = document.createElement(\"button\");\r\n                    dB.className = \"editBtn\";\r\n                    dB.onclick = () => deleteTip(tipID);\r\n                    const dBimg = document.createElement(\"img\");\r\n                    dBimg.id = tipID + \"tE\";\r\n                    dBimg.alt=\"editingButton\";\r\n                    dBimg.src= bin;\r\n                    dBimg.style.width=\"25px\";\r\n                    dBimg.style.height=\"35px\";\r\n                    const dBimgttt = document.createElement(\"span\");\r\n                    dBimgttt.className = \"tooltiptext\";\r\n                    dBimgttt.innerHTML = \"Delete\";\r\n\r\n                    dBimg.appendChild(dBimgttt);\r\n                    dB.appendChild(dBimg);\r\n\r\n                    tM.appendChild(dB);\r\n\r\n\r\n                    const subBtn = document.getElementById(tipID + \"subBtn\");\r\n                    subBtn.parentNode.replaceChild(tM, subBtn);\r\n\r\n                }\r\n            }).then(()=>{\r\n                getAllData();// not updating the tipString for some reason\r\n            })\r\n            .catch(error=>{\r\n                console.log(error);\r\n            })\r\n      }\r\n    }\r\n\r\n    function deleteTip(tipID) {                                             // deletes tip in backend\r\n        const jwt = sessionStorage.getItem('jwt');\r\n        console.log(jwt);\r\n\r\n        axios.delete('http://localhost:8080/tip/' + tipID,\r\n            {headers: { \"Authorization\" : `Bearer ${jwt}`,\r\n            \"Access-Control-Allow-Origin\": \"http://localhost:8080\"},\r\n            mode: 'cors'\r\n        }).then(response=>{\r\n            console.log(response);\r\n            if (response.status === 200){\r\n                alert(\"Tip deleted.\")\r\n            }\r\n        }).then(()=>{\r\n            tipCategory.current.value=\"\";\r\n            tipString.current.value=\"\";\r\n            author.current.value=100;\r\n\r\n            getAllData();// not updating after\r\n        })\r\n        .catch(error=>{\r\n            console.log(error);\r\n        })\r\n    }\r\n\r\n    ///////////////////\r\n    const tabSwitch = () => {\r\n        const tabs = document.querySelectorAll(\"[data-tab-value]\");\r\n        const tabInfos = document.querySelectorAll(\"[data-tab-info]\");\r\n    \r\n        tabs.forEach((tab) => {\r\n          tab.addEventListener(\"click\", () => {\r\n            const target = document.querySelector(tab.dataset.tabValue);\r\n    \r\n            tabInfos.forEach((tabInfo) => {\r\n              tabInfo.classList.remove(\"active\");\r\n            });\r\n            target.classList.add(\"active\");\r\n          });\r\n        });\r\n      };\r\n\r\n    ////////\r\n\r\n    return (\r\n        <section className=\"mainContent\">\r\n            <section>\r\n                <h2>Energy Saving Tips</h2><br />\r\n                <p>\r\n                    We know not everyone can afford to switch to better renewable energy\r\n                    yet, so here's some tips to help you out saving energy and money for\r\n                    energy.\r\n                </p>\r\n            </section>\r\n\r\n            <section>\r\n                <div className=\"tabs\">        {/* tabs fot tips page*/}\r\n                    <span data-tab-value=\"#tab_1\" onClick={tabSwitch}>Tips from Us</span>\r\n                    <span data-tab-value=\"#tab_2\" onClick={tabSwitch}>Tips from All</span>\r\n                    <span data-tab-value=\"#tab_3\" onClick={tabSwitch}>Tips from You</span>\r\n                </div>\r\n                <div className=\"tab-content\">\r\n\r\n                    {/* tab 1 */}\r\n                    <div className=\"tabs_tab active\" id=\"tab_1\" data-tab-info>\r\n                        <div className=\"tipLine\">\r\n                            <div className=\"tip\">\r\n                                <div className=\"beforeH\">\r\n                                    <span>\r\n                                        <h4>Leaving the room?<br /><br /> Turn it off</h4>\r\n                                    </span>\r\n                                    <img src={lightbulb} alt=\"lightbulb\" id=\"lightbulb\" />\r\n                                </div>\r\n                                <div className=\"afterH\">\r\n                                    Turning lights off when you leave the room or are simply not\r\n                                    using them could save you £25 per year on energy bills\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"tip\">\r\n                                <div className=\"beforeH\">\r\n                                    <span>\r\n                                        <strong>Not using it?<br /><br />Unplug it</strong>\r\n                                    </span>\r\n                                </div>\r\n                                <div className=\"afterH\">\r\n                                    If you're not using your electrical devices, make sure you\r\n                                    unplug them\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"tipLine\">\r\n                            <div className=\"tip\">\r\n                                <div className=\"beforeH\">\r\n                                    <span>\r\n                                        <strong>At 100%?<br /><br />Stop charging it</strong>\r\n                                    </span>\r\n                                </div>\r\n                                <div className=\"afterH\">\r\n                                    Make sure you unplug when your devices reach full-charge\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"tip\">\r\n                                <div className=\"beforeH\">\r\n                                    <span>\r\n                                        <strong>Use an air dryer<br /><br />Not a tumble dryer</strong>\r\n                                    </span>\r\n                                </div>\r\n                                <div className=\"afterH\">\r\n                                    Don't use the tumble dryer when it's not necessary, hanging\r\n                                    clothes on drying racks could save £70 a year\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"tipLine\">\r\n                            <div className=\"tip\">\r\n                                <div className=\"beforeH\">\r\n                                    <span>\r\n                                        <strong>Shower don't Bathe<br /></strong>\r\n                                    </span>\r\n                                    <img src={shower} alt=\"shower\" id=\"shower\" />\r\n                                </div>\r\n                                <div className=\"afterH\">\r\n                                    Swapping just one bath for a short shower a week could save\r\n                                    £20 a year\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"tip\">\r\n                                <div className=\"beforeH\">\r\n                                    <span>\r\n                                        <strong>Use Kettles wisely<br /><br />Avoid overfilling</strong>\r\n                                    </span>\r\n                                    <img src={kettle} alt=\"kettle\" id=\"kettle\" />\r\n                                </div>\r\n                                <div className=\"afterH\">\r\n                                    Using just the right amount of water when boiling your kettle\r\n                                    could save £13 a year\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* tab 2 */}\r\n                    <div className=\"tabs_tab\" id=\"tab_2\" data-tab-info>\r\n                        <p>Browse the helpful tips posted by your fellow users.</p><br />\r\n                        <div className=\"tab2\">\r\n                            <div className=\"allTips\">\r\n                                <div id=\"aTsameLine\">\r\n                                    <span>\r\n                                        Category:\r\n                                        <select className=\"tipFilterCategory\" ref={catSort} onChange={(e) => setCSort(e.target.value)}>\r\n                                            <option value=\"\"></option>\r\n                                            <option id=\"homeOption\" value=\"Home\">Home</option>\r\n                                            <option id=\"carOption\" value=\"Car\">Car</option>\r\n                                            <option id=\"transportOption\" value=\"Transport\">Transport</option>\r\n                                            {/* can add more category options */}\r\n                                        </select>\r\n                                    </span>\r\n                                    <span>\r\n                                        Order:\r\n                                        <select id=\"tipFilterCategory\" className=\"tipFilterCategory\" ref={orderSort} >\r\n                                            <option id=\"newest\">Newest First</option>\r\n                                            <option id=\"oldest\">Oldest First</option>\r\n                                            <option id=\"mostPop\">Most Popular</option>\r\n                                            <option id=\"leastPop\">Least Popular</option>\r\n                                        </select>\r\n                                    </span>\r\n                                </div>\r\n                                <div className=\"tipBoxes\">\r\n\r\n                                    {/* gets and displays all tips from backend database */}\r\n                                    <div className=\"box\">\r\n                                        {displayAllTipData()}\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* tab 3 */}\r\n                    <div className=\"tabs_tab\" id=\"tab_3\" data-tab-info>\r\n                        <span>You currently have </span><span>{data.length}</span><span> tips posted.</span>\r\n\r\n                        {/* submit tips */}\r\n                        <div className=\"submitTips\">\r\n                            <div>\r\n                                <p>Do you have helpful tips for others?</p>\r\n                                <div>\r\n                                    <span>Category: </span>\r\n                                    <select id=\"tipCategory\" ref={tipCategory} required>\r\n                                        <option value=\"\"></option>\r\n                                        <option id=\"homeOption\" value=\"Home\">Home</option>\r\n                                        <option id=\"carOption\" value=\"Car\">Car</option>\r\n                                        <option id=\"transportOption\" value=\"Transport\">Transport</option>\r\n                                        {/* can add more category options */}\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                            <div id=\"textArea\">\r\n                                <textarea id=\"tA\" placeholder=\"Enter your Tip here...\" ref={tipString} required></textarea>\r\n                            </div>\r\n                            <div id=\"tipButtonDiv\">\r\n                                <button className=\"tipButton\" onClick={handleSubmit}>Submit</button>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"userTips\"><br />\r\n                            <p><strong>Your Tips:</strong></p>\r\n\r\n                            {/* gets and displays all logged in user's tips from backend database */}\r\n                            <div className=\"tbox\">\r\n                                <div className=\"lbox\">\r\n                                    {displayData()}\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </section>\r\n    )\r\n}","C:\\Users\\LouLa\\OneDrive\\Documents\\GitHub\\Group46\\testgroupproject\\src\\Pages\\Quiz.js",["181","182","183","184","185","186","187","188","189"],[],"import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useOutletContext } from \"react-router-dom\";\r\nimport \"./Quiz.css\";\r\nimport Questions from \"./QuizComponents/Questions\";\r\nimport QuizHandler from \"./QuizComponents/Quizhandler\";\r\nimport axios from \"axios\";\r\nimport LeaderBoard from \"./QuizComponents/LeaderBoard\";\r\n//Add Leaderboard feature once quiz Stats works\r\n\r\nexport default function Quiz() {\r\n  const [loggedInUser, setLoggedinUser] = useOutletContext();\r\n  const [userdata, setUserdata] = useState(\"\");\r\n  let data = [];\r\n  let list = [];\r\n  let correctAnswers = [];\r\n  let currentQuestion = 0;\r\n\r\n  const [outTest, setOutTest] = useState(true);\r\n  const [stats, setStats] = useState({\r\n    lastScore: 0,\r\n    testsTaken: 0,\r\n    averageScore: 0,\r\n    perfectScores: 0,\r\n  });\r\n  const [fetchedQuestions, setFetchedQuestions] = useState([]);\r\n  const [LeaderBoardList, setLeaderboardList] = useState([]);\r\n  const stringScore = stats.lastScore.toString();\r\n\r\n  useEffect(() => {\r\n    getQuestions();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(LeaderBoardList);\r\n  }, [LeaderBoardList]);\r\n\r\n  // useEffect(() => {\r\n  //   checkLoggedIn();\r\n  // }, []);\r\n\r\n  const getQuestions = () => {\r\n    axios({\r\n      method: \"get\",\r\n      url: \"http://localhost:8080/questions\",\r\n    })\r\n      .then((response) => {\r\n        data = response.data;\r\n        setFetchedQuestions([...data]);\r\n        // for (let i = 0; i < data.length; i++) {\r\n        //   correctAnswers.push(data[i].correctAnswer);\r\n        // }\r\n      })\r\n      .then(() => {\r\n        console.log(data);\r\n        console.log(fetchedQuestions);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const SaveStats = () => {\r\n    console.log(stringScore);\r\n    if (!checkLoggedIn()) {\r\n      alert(\"You need to log in\");\r\n    } else {\r\n      if (userdata != \"\") {\r\n        PostStats();\r\n      } else {\r\n        alert(\"Please Check That You Are Logged In\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const PostStats = () => {\r\n    console.log(userdata.id);\r\n    const jwt = sessionStorage.getItem(\"jwt\");\r\n    axios({\r\n      method: \"post\",\r\n      url: \"http://localhost:8080/stat\",\r\n      data: {\r\n        lastScore: stringScore,\r\n        // author: userdata,\r\n        userId: {\r\n          id: userdata.id,\r\n          name: userdata.name,\r\n          email: userdata.email,\r\n          password: userdata.password,\r\n          buyer_seller: userdata.buyer_seller,\r\n        },\r\n      },\r\n      headers: { Authorization: `Bearer ${jwt}` },\r\n    })\r\n      .then((response) => {\r\n        console.log(response);\r\n        if (response.status === 201) {\r\n          alert(\"Stat Saved.\");\r\n\r\n          ////////\r\n          //getAllData();\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const ShowLeaderBoard = () => {\r\n    axios({\r\n      method: \"get\",\r\n      url: \"http://localhost:8080/stat\",\r\n    })\r\n      .then((response) => {\r\n        data = response.data;\r\n        setLeaderboardList([...data]);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n    console.log(LeaderBoardList);\r\n  };\r\n\r\n  const toggleView = () => {\r\n    console.log(fetchedQuestions);\r\n    if (fetchedQuestions != []) {\r\n      if (outTest == true) {\r\n        setOutTest(false);\r\n      } else {\r\n        setOutTest(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  const checkLoggedIn = () => {\r\n    if (loggedInUser !== \"\" && userdata === \"\") {\r\n      const jwt = sessionStorage.getItem(\"jwt\");\r\n      console.log(jwt);\r\n      axios({\r\n        method: \"get\",\r\n        url: \"http://localhost:8080/user/findByEmail\",\r\n        params: { email: loggedInUser },\r\n        headers: { Authorization: `Bearer ${jwt}` },\r\n      })\r\n        .then((response) => {\r\n          if (response.status === 200) {\r\n            console.log(\"response.data = \", response.data);\r\n            console.log(response.data.userType);\r\n            setUserdata(response.data);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err.response);\r\n          setUserdata(\"Data failure\");\r\n          return false;\r\n        });\r\n\r\n      ///////////////\r\n\r\n      // const jwt = sessionStorage.getItem('jwt');\r\n      console.log(jwt);\r\n\r\n      return true;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  if (outTest) {\r\n    return (\r\n      <section className=\"mainContent\">\r\n        <div>\r\n          <p>\r\n            Why not test your knowledge about different energy types by taking a\r\n            quiz?\r\n          </p>\r\n          <br />\r\n          <div className=\"quizButtonCont\">\r\n            <button id=\"takeQuizButton\" onClick={toggleView}>\r\n              Take Quiz\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <br />\r\n        <div className=\"quizStats\">\r\n          <h4>Quiz Stats:</h4>\r\n          <div className=\"stats\">\r\n            <p>Your Last Score was: {stats.lastScore}</p>\r\n            <p>You have taken a total of {stats.testsTaken} quizzes.</p>\r\n            <p>Average score: {stats.averageScore}%</p>\r\n            <p>Total number of 100%: {stats.perfectScores}</p>\r\n          </div>\r\n        </div>\r\n        <div id=\"statsSection\">\r\n          <button className=\"statButton\" onClick={SaveStats}>\r\n            Save Stats\r\n          </button>\r\n          <button className=\"statButton\" onClick={ShowLeaderBoard}>\r\n            Show LeaderBoard\r\n          </button>\r\n        </div>\r\n        <LeaderBoard LeaderBoardList={LeaderBoardList} />\r\n      </section>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className=\"mainContent\">\r\n        <QuizHandler\r\n          questions={fetchedQuestions}\r\n          stats={stats}\r\n          setStats={setStats}\r\n        />\r\n        <button id=\"takeQuizButton\" onClick={toggleView}>\r\n          Go Back\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\LouLa\\OneDrive\\Documents\\GitHub\\Group46\\testgroupproject\\src\\Pages\\AboutUs.js",["190"],[],"C:\\Users\\LouLa\\OneDrive\\Documents\\GitHub\\Group46\\testgroupproject\\src\\components\\Sidebar.js",["191","192","193","194","195"],[],"C:\\Users\\LouLa\\OneDrive\\Documents\\GitHub\\Group46\\testgroupproject\\src\\Pages\\QuizComponents\\Questions.js",[],[],"C:\\Users\\LouLa\\OneDrive\\Documents\\GitHub\\Group46\\testgroupproject\\src\\Pages\\QuizComponents\\Quizhandler.jsx",["196","197","198","199","200"],[],"import React, { useState, useEffect } from \"react\";\r\nimport Question from \"./QuestionHandler\";\r\nimport \"./QuizHandler.css\";\r\n\r\nconst QuizHandler = (props) => {\r\n  const { questions, stats, setStats } = props;\r\n  const [currentQuestion, setCurrentQuestion] = useState(0);\r\n  const correctAnswers = questions.map((questions) => questions.correctAnswer);\r\n  const [currentAnswer, setCurrentAnswer] = useState(null);\r\n  const [userAnswers, setUserAnswers] = useState([]);\r\n\r\n  const [score, setScore] = useState(0);\r\n  const [showResults, setShowResults] = useState(false);\r\n\r\n  const { choiceA, choiceB, choiceC, choiceD } = questions[currentQuestion];\r\n\r\n  const [clickedA, setClickedA] = useState(\"\");\r\n  const [clickedB, setClickedB] = useState(\"\");\r\n  const [clickedC, setClickedC] = useState(\"\");\r\n  const [clickedD, setClickedD] = useState(\"\");\r\n\r\n  const handleAnswer = (answer) => {\r\n    setCurrentAnswer(answer);\r\n    setClickedA(\"\");\r\n    setClickedB(\"\");\r\n    setClickedC(\"\");\r\n    setClickedD(\"\");\r\n    if (answer == choiceA) {\r\n      setClickedA(\" clicked\");\r\n    }\r\n    if (answer == choiceB) {\r\n      setClickedB(\" clicked\");\r\n    }\r\n    if (answer == choiceC) {\r\n      setClickedC(\" clicked\");\r\n    }\r\n    if (answer == choiceD) {\r\n      setClickedD(\" clicked\");\r\n    }\r\n  };\r\n\r\n  const submitAnswer = () => {\r\n    if (currentAnswer != null) {\r\n      setUserAnswers((prevAnswers) => [...prevAnswers, currentAnswer]);\r\n      setCurrentAnswer(null);\r\n      setClickedA(\"\");\r\n      setClickedB(\"\");\r\n      setClickedC(\"\");\r\n      setClickedD(\"\");\r\n      if (currentQuestion < questions.length - 1) {\r\n        setCurrentQuestion((prevcurrentQuestion) => prevcurrentQuestion + 1);\r\n      } else {\r\n      }\r\n    } else {\r\n      alert(\"Select an Option\");\r\n    }\r\n  };\r\n\r\n  const submitQuiz = () => {\r\n    //compare correct answers to user answers and return a score\r\n\r\n    setScore(0);\r\n    let ss = 0;\r\n    for (let i = 0; i < correctAnswers.length; i++) {\r\n      if (correctAnswers[i] === userAnswers[i]) {\r\n        ss++;\r\n      } else {\r\n        //console.log(\"wrong\");\r\n      }\r\n      setScore(ss);\r\n    }\r\n\r\n    let newPerfect = 0;\r\n    let newNumerator = 0;\r\n    let takentests = stats.testsTaken + 1;\r\n    let scorePercentage = (ss / 10) * 100;\r\n    newNumerator += stats.testsTaken * stats.averageScore + scorePercentage;\r\n    let newAverage = newNumerator / takentests;\r\n    if (ss === 4) {\r\n      newPerfect = stats.perfectScores + 1;\r\n    } else {\r\n      newPerfect = stats.perfectScores;\r\n    }\r\n\r\n    setStats({\r\n      lastScore: ss,\r\n      testsTaken: takentests,\r\n      averageScore: newAverage,\r\n      perfectScores: newPerfect,\r\n    });\r\n\r\n    setShowResults(true);\r\n    console.log(\"Quiz Sumbitted\");\r\n    console.log(newNumerator);\r\n  };\r\n\r\n  const calculateStats = () => {\r\n    // let ss = score;\r\n    // let newAverage =\r\n    //   ((stats.averageScore * stats.testsTaken + score / 4) * 100) /\r\n    //   (stats.testsTaken + 1);\r\n    // setStats({\r\n    //   lastScore: ss,\r\n    //   testsTaken: takentests,\r\n    //   averageScore: newAverage,\r\n    //   perfectScores: 0,\r\n    // });\r\n    // console.log(\"taken tests:\" + takentests);\r\n    // console.log(\"Average score:\" + newAverage);\r\n    // console.log(\"Last Score:\" + score);\r\n  };\r\n\r\n  useEffect(() => {\r\n    calculateStats();\r\n  }, [showResults]);\r\n\r\n  useEffect(() => {\r\n    if (userAnswers.length === correctAnswers.length) {\r\n      console.log(userAnswers);\r\n      submitQuiz();\r\n    }\r\n  }, [userAnswers]);\r\n\r\n  if (showResults) {\r\n    return (\r\n      <div className=\"results-page\">\r\n        <div>You Scored: {score}</div>\r\n      </div>\r\n    );\r\n  } else {\r\n    const { question, choiceA, choiceB, choiceC, choiceD } =\r\n      questions[currentQuestion];\r\n    return (\r\n      <div className=\"question-display\">\r\n        <Question\r\n          question={question}\r\n          choiceA={choiceA}\r\n          choiceB={choiceB}\r\n          choiceC={choiceC}\r\n          choiceD={choiceD}\r\n          handleAnswer={handleAnswer}\r\n          clickedA={clickedA}\r\n          clickedB={clickedB}\r\n          clickedC={clickedC}\r\n          clickedD={clickedD}\r\n        />\r\n        <button className=\"takeQuizButton\" onClick={submitAnswer}>\r\n          Next\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default QuizHandler;\r\n","C:\\Users\\LouLa\\OneDrive\\Documents\\GitHub\\Group46\\testgroupproject\\src\\Pages\\QuizComponents\\QuestionHandler.jsx",["201"],[],"import React, { useState } from \"react\";\r\nimport \"./QuestionHandler.css\";\r\n\r\nconst QuestionHandler = (props) => {\r\n  const {\r\n    question,\r\n    choiceA,\r\n    choiceB,\r\n    choiceC,\r\n    choiceD,\r\n    handleAnswer,\r\n    clickedA,\r\n    clickedB,\r\n    clickedC,\r\n    clickedD,\r\n  } = props;\r\n\r\n  return (\r\n    <div className=\"question-card\">\r\n      <p className=\"question\">{question}</p>\r\n      <div className=\"question-options\">\r\n        <button\r\n          className={`question-option${clickedA}`}\r\n          onClick={() => {\r\n            handleAnswer(choiceA);\r\n          }}\r\n        >\r\n          {choiceA}\r\n        </button>\r\n        <button\r\n          className={`question-option${clickedB}`}\r\n          onClick={() => {\r\n            handleAnswer(choiceB);\r\n          }}\r\n        >\r\n          {choiceB}\r\n        </button>\r\n        <button\r\n          className={`question-option${clickedC}`}\r\n          onClick={() => {\r\n            handleAnswer(choiceC);\r\n          }}\r\n        >\r\n          {choiceC}\r\n        </button>\r\n        <button\r\n          className={`question-option${clickedD}`}\r\n          onClick={() => {\r\n            handleAnswer(choiceD);\r\n          }}\r\n        >\r\n          {choiceD}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuestionHandler;\r\n","C:\\Users\\LouLa\\OneDrive\\Documents\\GitHub\\Group46\\testgroupproject\\src\\components\\Footer.js",["202","203","204","205"],[],"C:\\Users\\LouLa\\OneDrive\\Documents\\GitHub\\Group46\\testgroupproject\\src\\Pages\\TipsComponents\\Likes.js",["206"],[],"C:\\Users\\LouLa\\OneDrive\\Documents\\GitHub\\Group46\\testgroupproject\\src\\Pages\\TipsComponents\\AllTip.js",["207","208","209","210","211"],[],"C:\\Users\\LouLa\\OneDrive\\Documents\\GitHub\\Group46\\testgroupproject\\src\\components\\Header.js",["212","213","214","215","216","217","218","219"],[],"// import React from \"react\";\r\n\r\n// export default function Header(){\r\n//     return (\r\n//         // <header className=\"App-header\">\r\n\r\n//         //     <h1>Group Project</h1>\r\n\r\n//         //     {/* <Link className=\"nav-link\" to={'/register'}>Register</Link>\r\n//         //     <Link className=\"nav-link\" to={'/login'}>Login</Link> */}\r\n//         // </header>\r\n\r\n//         <h1 className=\"App-header\">EnergyAware</h1>\r\n//     )\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nimport React, {useContext, useEffect, useState} from \"react\";\r\nimport { useOutletContext } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport UserContext from '../App.js'\r\n\r\n// import {AO} from './AO';\r\n\r\nexport default function Header(/*{user}*/props){\r\n\r\n    // const {user} = props;\r\n    const {loggedInUser, setLoggedInUser} = props;\r\n    // const user = useContext(UserContext);\r\n    // console.log(\"user= \", user);\r\n\r\n    // const [loggedInUser, setLoggedinUser] = useOutletContext();\r\n    // const [loggedInUser, setLoggedinUser] = useState(\"\");\r\n    // const [loggedInUser, setLoggedinUser] = useContext();\r\n    // const [loggedInUser, setLoggedinUser] = user;\r\n\r\n    console.log(\"liu= \", loggedInUser);\r\n    // const [userdata, setUserdata] = useState(\"\");\r\n\r\n    // const refreshAO = () => {\r\n    //     if(loggedInUser!==\"\"){\r\n\r\n    //         console.log('loggedInUser = ', loggedInUser);\r\n\r\n    //         const jwt = sessionStorage.getItem('jwt');\r\n    //         console.log(jwt);\r\n    //         axios({\r\n    //             method: 'get',\r\n    //             url: 'http://localhost:8080/user/findByEmail',\r\n    //             params: {email: loggedInUser},\r\n    //             // params: {email: loggedInUser.email},\r\n    //             headers: {\"Authorization\" : `Bearer ${jwt}`}\r\n    //         }).then((response) => {\r\n    //             if (response.status === 200){\r\n    //                 console.log(response.data);\r\n    //                 console.log(response.data.userType);\r\n    //                 // setUserdata(response.data.userType);\r\n    //                 // setLoggedinUser();\r\n    //             }\r\n    //         }).catch(err => {\r\n    //             console.log(err.response);\r\n    //             // setUserdata(\"Data failure\");\r\n    //         })\r\n    //     }\r\n    // };\r\n\r\n    // useEffect(() => {\r\n    //     // <AO/>\r\n    //     refreshAO();\r\n    // }, [loggedInUser]);\r\n\r\n    // if (loggedInUser===\"\") {\r\n    //   return <header className=\"App-header\">\r\n    //             <div className=\"AccountOptions\">\r\n    //                 <nav className=\"AO-nav\">\r\n    //                     <Link className=\"AO-link\" to={'/register'} /*onClick={refreshAO}*/>Sign Up</Link>\r\n    //                     <p className=\"AO-or\">or</p>\r\n    //                     <Link className=\"AO-link\" to={'/login'} /*onClick={refreshAO}*/>Login</Link>\r\n    //                 </nav>\r\n    //             </div>\r\n    //          </header>;\r\n    // } else{\r\n    //   return <header className=\"App-header\">\r\n    //             <div className=\"AccountOptions\">\r\n    //                 <nav className=\"AO-nav\">\r\n    //                     {/* <Link className=\"AO-link\" to={'/register'}>Sign Up</Link>\r\n    //                     <p className=\"AO-or\">or</p>\r\n    //                     <Link className=\"AO-link\" to={'/login'}>Login</Link> */}\r\n    //                     <p>Log Out</p>\r\n    //                 </nav>\r\n    //             </div>\r\n    //         </header>;\r\n    // }\r\n\r\n\r\n    // useEffect(() => {\r\n    //     <AO/>\r\n    // })\r\n\r\n    return (\r\n        <header className=\"App-header\">\r\n            {/* refreshAO() */}\r\n            <div className=\"headerBox\">\r\n                <span className=\"title\"><h1>EnergyAware</h1></span>\r\n                {/* <span><div className=\"AccountOptions\"> */}\r\n                    {/* <nav className=\"AO-nav\">\r\n                        <Link className=\"AO-link\" to={'/register'}>Sign Up</Link>\r\n                        <p className=\"AO-or\">or</p>\r\n                        <Link className=\"AO-link\" to={'/login'}>Login</Link>\r\n                    </nav> */}\r\n\r\n                    {/* <p>.{loggedInUser}.</p> */}\r\n\r\n                {/* </div></span> */}\r\n            </div>\r\n        </header>\r\n    )\r\n}","C:\\Users\\LouLa\\OneDrive\\Documents\\GitHub\\Group46\\testgroupproject\\src\\Pages\\QuizComponents\\LeaderBoard.js",["220"],[],"import React from \"react\";\r\nimport \"./LeaderBoard.css\";\r\n\r\nconst LeaderBoard = (props) => {\r\n  const { LeaderBoardList } = props;\r\n  // let ranks = LeaderBoardList.map((LeaderBoardList, index) => {\r\n  //   {\r\n  //     LeaderBoardList[index].lastScore;\r\n  //   }\r\n  //\r\n  // });\r\n\r\n  const sortList = () => {};\r\n  return (\r\n    <div className=\"leaderBoardContainer\">\r\n      {LeaderBoardList.map((Leader, index) => {\r\n        let score = Leader.lastScore;\r\n        let email = Leader.testee.email;\r\n        return (\r\n          <div key={index} className=\"leader\">\r\n            {email} {score}\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LeaderBoard;\r\n","C:\\Users\\LouLa\\OneDrive\\Documents\\GitHub\\Group46\\testgroupproject\\src\\Pages\\PetitionSignForm.js",["221"],[],"C:\\Users\\LouLa\\OneDrive\\Documents\\GitHub\\Group46\\testgroupproject\\src\\Pages\\PetitionComponents\\PetitionList.js",["222"],[],"C:\\Users\\LouLa\\OneDrive\\Documents\\GitHub\\Group46\\testgroupproject\\src\\Pages\\PetitionComponents\\Petition_content.js",[],[],"C:\\Users\\LouLa\\OneDrive\\Documents\\GitHub\\Group46\\testgroupproject\\src\\Pages\\PetitionComponents\\NotFoundPage.js",[],[],{"ruleId":"223","severity":1,"message":"224","line":5,"column":8,"nodeType":"225","messageId":"226","endLine":5,"endColumn":11},{"ruleId":"223","severity":1,"message":"227","line":4,"column":10,"nodeType":"225","messageId":"226","endLine":4,"endColumn":14},{"ruleId":"223","severity":1,"message":"228","line":9,"column":8,"nodeType":"225","messageId":"226","endLine":9,"endColumn":14},{"ruleId":"223","severity":1,"message":"227","line":135,"column":9,"nodeType":"225","messageId":"226","endLine":135,"endColumn":13},{"ruleId":"223","severity":1,"message":"229","line":141,"column":9,"nodeType":"225","messageId":"226","endLine":141,"endColumn":12},{"ruleId":"223","severity":1,"message":"230","line":11,"column":9,"nodeType":"225","messageId":"226","endLine":11,"endColumn":16},{"ruleId":"223","severity":1,"message":"231","line":14,"column":11,"nodeType":"225","messageId":"226","endLine":14,"endColumn":19},{"ruleId":"232","severity":1,"message":"233","line":72,"column":13,"nodeType":"234","endLine":72,"endColumn":148},{"ruleId":"232","severity":1,"message":"233","line":116,"column":13,"nodeType":"234","endLine":116,"endColumn":156},{"ruleId":"223","severity":1,"message":"235","line":11,"column":12,"nodeType":"225","messageId":"226","endLine":11,"endColumn":24},{"ruleId":"223","severity":1,"message":"236","line":1,"column":46,"nodeType":"225","messageId":"226","endLine":1,"endColumn":59},{"ruleId":"223","severity":1,"message":"237","line":21,"column":26,"nodeType":"225","messageId":"226","endLine":21,"endColumn":41},{"ruleId":"223","severity":1,"message":"238","line":29,"column":12,"nodeType":"225","messageId":"226","endLine":29,"endColumn":17},{"ruleId":"223","severity":1,"message":"239","line":188,"column":14,"nodeType":"225","messageId":"226","endLine":188,"endColumn":29},{"ruleId":"223","severity":1,"message":"240","line":192,"column":14,"nodeType":"225","messageId":"226","endLine":192,"endColumn":21},{"ruleId":"223","severity":1,"message":"241","line":223,"column":14,"nodeType":"225","messageId":"226","endLine":223,"endColumn":27},{"ruleId":"242","severity":1,"message":"243","line":253,"column":41,"nodeType":"244","messageId":"245","endLine":253,"endColumn":43},{"ruleId":"246","severity":1,"message":"247","line":291,"column":22,"nodeType":"225","messageId":"248","endLine":291,"endColumn":23},{"ruleId":"249","severity":1,"message":"250","line":295,"column":30,"nodeType":"251","messageId":"252","endLine":295,"endColumn":32},{"ruleId":"246","severity":1,"message":"247","line":305,"column":22,"nodeType":"225","messageId":"248","endLine":305,"endColumn":23},{"ruleId":"253","severity":1,"message":"254","line":307,"column":32,"nodeType":"244","messageId":"255","endLine":312,"endColumn":18},{"ruleId":"242","severity":1,"message":"243","line":307,"column":42,"nodeType":"244","messageId":"245","endLine":307,"endColumn":44},{"ruleId":"249","severity":1,"message":"250","line":308,"column":28,"nodeType":"251","messageId":"252","endLine":308,"endColumn":30},{"ruleId":"246","severity":1,"message":"247","line":315,"column":22,"nodeType":"225","messageId":"248","endLine":315,"endColumn":23},{"ruleId":"246","severity":1,"message":"256","line":331,"column":17,"nodeType":"225","messageId":"248","endLine":331,"endColumn":20},{"ruleId":"246","severity":1,"message":"257","line":332,"column":17,"nodeType":"225","messageId":"248","endLine":332,"endColumn":18},{"ruleId":"242","severity":1,"message":"243","line":334,"column":41,"nodeType":"244","messageId":"245","endLine":334,"endColumn":43},{"ruleId":"246","severity":1,"message":"247","line":352,"column":23,"nodeType":"225","messageId":"248","endLine":352,"endColumn":24},{"ruleId":"246","severity":1,"message":"258","line":357,"column":22,"nodeType":"225","messageId":"248","endLine":357,"endColumn":25},{"ruleId":"246","severity":1,"message":"259","line":365,"column":17,"nodeType":"225","messageId":"248","endLine":365,"endColumn":22},{"ruleId":"246","severity":1,"message":"260","line":366,"column":17,"nodeType":"225","messageId":"248","endLine":366,"endColumn":20},{"ruleId":"246","severity":1,"message":"247","line":371,"column":22,"nodeType":"225","messageId":"248","endLine":371,"endColumn":23},{"ruleId":"246","severity":1,"message":"261","line":373,"column":24,"nodeType":"225","messageId":"248","endLine":373,"endColumn":25},{"ruleId":"249","severity":1,"message":"250","line":375,"column":30,"nodeType":"251","messageId":"252","endLine":375,"endColumn":32},{"ruleId":"246","severity":1,"message":"247","line":385,"column":22,"nodeType":"225","messageId":"248","endLine":385,"endColumn":23},{"ruleId":"253","severity":1,"message":"254","line":387,"column":32,"nodeType":"244","messageId":"255","endLine":392,"endColumn":18},{"ruleId":"242","severity":1,"message":"243","line":387,"column":42,"nodeType":"244","messageId":"245","endLine":387,"endColumn":44},{"ruleId":"249","severity":1,"message":"250","line":388,"column":28,"nodeType":"251","messageId":"252","endLine":388,"endColumn":30},{"ruleId":"246","severity":1,"message":"247","line":395,"column":22,"nodeType":"225","messageId":"248","endLine":395,"endColumn":23},{"ruleId":"262","severity":1,"message":"263","line":481,"column":8,"nodeType":"264","endLine":481,"endColumn":27,"suggestions":"265"},{"ruleId":"223","severity":1,"message":"266","line":5,"column":8,"nodeType":"225","messageId":"226","endLine":5,"endColumn":17},{"ruleId":"223","severity":1,"message":"237","line":12,"column":24,"nodeType":"225","messageId":"226","endLine":12,"endColumn":39},{"ruleId":"223","severity":1,"message":"267","line":15,"column":7,"nodeType":"225","messageId":"226","endLine":15,"endColumn":11},{"ruleId":"223","severity":1,"message":"268","line":16,"column":7,"nodeType":"225","messageId":"226","endLine":16,"endColumn":21},{"ruleId":"223","severity":1,"message":"269","line":17,"column":7,"nodeType":"225","messageId":"226","endLine":17,"endColumn":22},{"ruleId":"262","severity":1,"message":"270","line":32,"column":6,"nodeType":"264","endLine":32,"endColumn":8,"suggestions":"271"},{"ruleId":"249","severity":1,"message":"272","line":68,"column":20,"nodeType":"251","messageId":"252","endLine":68,"endColumn":22},{"ruleId":"249","severity":1,"message":"272","line":126,"column":26,"nodeType":"251","messageId":"252","endLine":126,"endColumn":28},{"ruleId":"249","severity":1,"message":"250","line":127,"column":19,"nodeType":"251","messageId":"252","endLine":127,"endColumn":21},{"ruleId":"273","severity":1,"message":"274","line":40,"column":16,"nodeType":"234","endLine":40,"endColumn":54},{"ruleId":"232","severity":1,"message":"233","line":15,"column":17,"nodeType":"234","endLine":15,"endColumn":28},{"ruleId":"232","severity":1,"message":"233","line":16,"column":17,"nodeType":"234","endLine":16,"endColumn":28},{"ruleId":"232","severity":1,"message":"233","line":17,"column":17,"nodeType":"234","endLine":17,"endColumn":28},{"ruleId":"232","severity":1,"message":"233","line":18,"column":17,"nodeType":"234","endLine":18,"endColumn":28},{"ruleId":"232","severity":1,"message":"233","line":20,"column":69,"nodeType":"234","endLine":20,"endColumn":80},{"ruleId":"249","severity":1,"message":"250","line":28,"column":16,"nodeType":"251","messageId":"252","endLine":28,"endColumn":18},{"ruleId":"249","severity":1,"message":"250","line":31,"column":16,"nodeType":"251","messageId":"252","endLine":31,"endColumn":18},{"ruleId":"249","severity":1,"message":"250","line":34,"column":16,"nodeType":"251","messageId":"252","endLine":34,"endColumn":18},{"ruleId":"249","severity":1,"message":"250","line":37,"column":16,"nodeType":"251","messageId":"252","endLine":37,"endColumn":18},{"ruleId":"262","severity":1,"message":"275","line":122,"column":6,"nodeType":"264","endLine":122,"endColumn":19,"suggestions":"276"},{"ruleId":"223","severity":1,"message":"277","line":1,"column":17,"nodeType":"225","messageId":"226","endLine":1,"endColumn":25},{"ruleId":"223","severity":1,"message":"227","line":2,"column":9,"nodeType":"225","messageId":"226","endLine":2,"endColumn":13},{"ruleId":"223","severity":1,"message":"278","line":4,"column":16,"nodeType":"225","messageId":"226","endLine":4,"endColumn":25},{"ruleId":"223","severity":1,"message":"277","line":4,"column":27,"nodeType":"225","messageId":"226","endLine":4,"endColumn":35},{"ruleId":"223","severity":1,"message":"279","line":5,"column":10,"nodeType":"225","messageId":"226","endLine":5,"endColumn":26},{"ruleId":"223","severity":1,"message":"278","line":2,"column":10,"nodeType":"225","messageId":"226","endLine":2,"endColumn":19},{"ruleId":"223","severity":1,"message":"280","line":1,"column":17,"nodeType":"225","messageId":"226","endLine":1,"endColumn":23},{"ruleId":"223","severity":1,"message":"279","line":4,"column":10,"nodeType":"225","messageId":"226","endLine":4,"endColumn":26},{"ruleId":"262","severity":1,"message":"281","line":20,"column":8,"nodeType":"264","endLine":20,"endColumn":10,"suggestions":"282"},{"ruleId":"223","severity":1,"message":"283","line":150,"column":11,"nodeType":"225","messageId":"226","endLine":150,"endColumn":19},{"ruleId":"262","severity":1,"message":"284","line":210,"column":8,"nodeType":"264","endLine":210,"endColumn":22,"suggestions":"285"},{"ruleId":"223","severity":1,"message":"227","line":25,"column":9,"nodeType":"225","messageId":"226","endLine":25,"endColumn":13},{"ruleId":"223","severity":1,"message":"286","line":27,"column":16,"nodeType":"225","messageId":"226","endLine":27,"endColumn":26},{"ruleId":"223","severity":1,"message":"278","line":27,"column":28,"nodeType":"225","messageId":"226","endLine":27,"endColumn":37},{"ruleId":"223","severity":1,"message":"277","line":27,"column":39,"nodeType":"225","messageId":"226","endLine":27,"endColumn":47},{"ruleId":"223","severity":1,"message":"279","line":28,"column":10,"nodeType":"225","messageId":"226","endLine":28,"endColumn":26},{"ruleId":"223","severity":1,"message":"287","line":29,"column":8,"nodeType":"225","messageId":"226","endLine":29,"endColumn":13},{"ruleId":"223","severity":1,"message":"288","line":30,"column":8,"nodeType":"225","messageId":"226","endLine":30,"endColumn":19},{"ruleId":"223","severity":1,"message":"289","line":37,"column":26,"nodeType":"225","messageId":"226","endLine":37,"endColumn":41},{"ruleId":"223","severity":1,"message":"290","line":13,"column":9,"nodeType":"225","messageId":"226","endLine":13,"endColumn":17},{"ruleId":"223","severity":1,"message":"291","line":50,"column":7,"nodeType":"225","messageId":"226","endLine":50,"endColumn":30},{"ruleId":"262","severity":1,"message":"292","line":17,"column":6,"nodeType":"264","endLine":17,"endColumn":8,"suggestions":"293"},"no-unused-vars","'App' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'Header' is defined but never used.","'nav' is assigned a value but never used.","'headers' is assigned a value but never used.","'Donation' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'loggedInUser' is assigned a value but never used.","'createElement' is defined but never used.","'setLoggedinUser' is assigned a value but never used.","'cSort' is assigned a value but never used.","'custom_sort_old' is defined but never used.","'mp_sort' is defined but never used.","'testsortleast' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-redeclare","'i' is already defined.","redeclared","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'i'.","unsafeRefs","'obj' is already defined.","'a' is already defined.","'key' is already defined.","'start' is already defined.","'end' is already defined.","'j' is already defined.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'checkLoggedIn' and 'getAllData'. Either include them or remove the dependency array.","ArrayExpression",["294"],"'Questions' is defined but never used.","'list' is assigned a value but never used.","'correctAnswers' is assigned a value but never used.","'currentQuestion' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getQuestions'. Either include it or remove the dependency array.",["295"],"Expected '!==' and instead saw '!='.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","React Hook useEffect has missing dependencies: 'correctAnswers.length' and 'submitQuiz'. Either include them or remove the dependency array.",["296"],"'useState' is defined but never used.","'useEffect' is defined but never used.","'useOutletContext' is defined but never used.","'useRef' is defined but never used.","React Hook useEffect has a missing dependency: 'getUserData'. Either include it or remove the dependency array.",["297"],"'tipLikes' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'allTipData', 'getIsLiked', and 'unlike'. Either include them or remove the dependency array.",["298"],"'useContext' is defined but never used.","'axios' is defined but never used.","'UserContext' is defined but never used.","'setLoggedInUser' is assigned a value but never used.","'sortList' is assigned a value but never used.","'checkInappropriateWords' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getUserSigns'. Either include it or remove the dependency array.",["299"],{"desc":"300","fix":"301"},{"desc":"302","fix":"303"},{"desc":"304","fix":"305"},{"desc":"306","fix":"307"},{"desc":"308","fix":"309"},{"desc":"310","fix":"311"},"Update the dependencies array to be: [userdata, catSort, checkLoggedIn, getAllData]",{"range":"312","text":"313"},"Update the dependencies array to be: [getQuestions]",{"range":"314","text":"315"},"Update the dependencies array to be: [correctAnswers.length, submitQuiz, userAnswers]",{"range":"316","text":"317"},"Update the dependencies array to be: [getUserData]",{"range":"318","text":"319"},"Update the dependencies array to be: [lId, isLiked, unlike, allTipData, getIsLiked]",{"range":"320","text":"321"},"Update the dependencies array to be: [getUserSigns]",{"range":"322","text":"323"},[16487,16506],"[userdata, catSort, checkLoggedIn, getAllData]",[1044,1046],"[getQuestions]",[3476,3489],"[correctAnswers.length, submitQuiz, userAnswers]",[471,473],"[getUserData]",[7915,7929],"[lId, isLiked, unlike, allTipData, getIsLiked]",[386,388],"[getUserSigns]"]